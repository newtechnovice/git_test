✅ Foundation 
Elements on an HTML page are just information wrapped in an 
opening and closing HTML tags. 

Paragraph element:

<p> insert content here </p>
⬆           ⬆           ⬆
opening     content       closing

There are some HTML elements that do not have a closing tags
called empty elements because they don't wrap any content. 

📝 Semantic HTML:
Using correct tags can help sites rank better in search engines
and make them accessible to users relying on assistive tech. 

📝 Always name the HTML file that will contain the homepage of your
website index.html because web servers by dafault will look for it 
when users land on your website.


✅ Working with Text
- Using the correct level of heading is important as levels provide
a hierarchy to the content; h1 heading for overall page, lower
headings for content in smaller sections of the page.

- <strong> bold </strong> semantically marks text as important and 
affects assistive tools like screen readers.

- <em> italic </em> semantically places emphasis on text

- <!-- --> comment

📝 Use indentation to make the level of nesting clear and readable; it
is recommended to indent any child elements by 2 spaces.


✅ Lists
<ul>
    <li>this is an</li>
    <li>UNORDERED LIST</li>
    <li>order doesn't matter</li>
</ul>

<ol>
    <li>this is an</li>
    <li>ORDERED LIST</li>
    <li>order matters</li>
</ol>


✅ Links and Images
<a> Anchor Element </a>
- It works when you give it an attribute -- additional information such
as destination -- which goes in the elements opening tags.

<a href = "link destination"> Click Here </a>
    ⬆
    hyperlink reference attribute; value should be the destination 
    we want the link to go to


📝 Absolute Links ➡️ links pages on OTHER websites 

https:// www.theodinproject.com /about
⬆                ⬆              ⬆
protocol        domain           path


📝 Relative Links ➡️ links to other pages WITHIN our own website

pages should be in the same directory but may run into some issue,
for example, if the directory changes for one page so, best to do:

<a href = "./pages/about.html"> About </a>
           ⬆
           specifying your code that it should start looking for the 
           file/directory relative to current directory 


<img src = "link" alt = "alternative text yjay describes an image">
- no closing tag; instead of wrapping content with an open and close tag
it embeds an image into the page using a src attribute which tells the
browser where the image file is located.

- works like href where it can embed an image using both absolute and
relative path.

<img src = "../images/dog.jpg">
            ⬆
            to use an image from other pages
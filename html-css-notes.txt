‚úÖ HTML Foundations
Elements on an HTML page are just information wrapped in an 
opening and closing HTML tags. 

Paragraph element:

<p> insert content here </p>
‚¨Ü           ‚¨Ü           ‚¨Ü
opening     content       closing

There are some HTML elements that do not have a closing tags
called empty elements because they don't wrap any content. 

üìù Semantic HTML:
Using correct tags can help sites rank better in search engines
and make them accessible to users relying on assistive tech. 

üìù Always name the HTML file that will contain the homepage of your
website index.html because web servers by dafault will look for it 
when users land on your website.


‚úÖ Working with Text
- Using the correct level of heading is important as levels provide
a hierarchy to the content; h1 heading for overall page, lower
headings for content in smaller sections of the page.

- <strong> bold </strong> semantically marks text as important and 
affects assistive tools like screen readers.

- <em> italic </em> semantically places emphasis on text

- <!-- --> comment

üìù Use indentation to make the level of nesting clear and readable; it
is recommended to indent any child elements by 2 spaces.


‚úÖ Lists
<ul>
    <li>this is an</li>
    <li>UNORDERED LIST</li>
    <li>order doesn't matter</li>
</ul>

<ol>
    <li>this is an</li>
    <li>ORDERED LIST</li>
    <li>order matters</li>
</ol>


‚úÖ Links and Images
<a> Anchor Element </a>
- It works when you give it an attribute -- additional information such
as destination -- which goes in the elements opening tags.

<a href = "link destination"> Click Here </a>
    ‚¨Ü
    hyperlink reference attribute; value should be the destination 
    we want the link to go to


üìù Absolute Links ‚û°Ô∏è links pages on OTHER websites 

https:// www.theodinproject.com /about
‚¨Ü                ‚¨Ü              ‚¨Ü
protocol        domain           path


üìù Relative Links ‚û°Ô∏è links to other pages WITHIN our own website

pages should be in the same directory but may run into some issue,
for example, if the directory changes for one page so, best to do:

<a href = "./pages/about.html"> About </a>
           ‚¨Ü
           specifying your code that it should start looking for the 
           file/directory relative to current directory 


<img src = "link" alt = "alternative text yjay describes an image">
- no closing tag; instead of wrapping content with an open and close tag
it embeds an image into the page using a src attribute which tells the
browser where the image file is located.

- works like href where it can embed an image using both absolute and
relative path.

<img src = "../images/dog.jpg">
            ‚¨Ü
            to use an image from other pages


____________________________________________________________________________
____________________________________________________________________________
‚úÖ CSS Foundations

selector
     ‚¨á
     div.bold-text {
         font-weight: 200;
     }      ‚¨Ü          ‚¨Ü
            property    value

üìù <div> empty container </div> in general, it is best to use appropriate HTML
elements for certain content.


SELECTORS ‚û°Ô∏è refers to the HTML elements to which CSS rules are applied

1. Universal selector (*)

* {
    color: purple;
}

Here every element will have color: purple style applied to it.

2. Type selector/element selector - selets all elements of the given element type

div {
    color: white;
}

Here every <div> elements will have color: white style applied to it.

3. Class selector - select elements with the given class (an attribute place on 
an HTML element); same classes CAN BE USE on as many HTML elements

In HTML file:
    <div class = "alert-text another-class multiple-class">
        content
    </div>

In CSS file:
‚ùóÔ∏è take note of the period
    ‚¨á
    .alert-text {
        color: red;
    }

4. ID selector - select element with the given ID; element can only hae ONE ID,
it cannot be repeated on a single page

In HTML file:
    <div id="title"> Title Here </div>

In CSS file:
‚ùóÔ∏è take note of the hashtag
    ‚¨á
    #title {
        background-color: red;
    }

5. Grouping selector
selectors that share declarations can be grouped together separated by a comma to
cut down repetition.

.read,
.unread {
    color: white;
}

.read {
    /* unique declarations */
}

.unread {
    /* unique declarations */
}

6. Chaining selector
‚ùóÔ∏è You cant chain more than one type selector since an element can't be two different
types at once e.g. selectors like <div> and <p>

applying a rule to a certain element with certain classes on it e.g. "subsection" and
"header"

In HTML file:
    <div class = "subsection header">ONE</div>
    <div class = "subsection preview">TWO</div>

In CSS file:
.subsection.header {
    color: red;
}

‚ùóÔ∏è .subsection.header selects any element that has BOTH the subsection and header classes
‚ùóÔ∏è take note of the lack of space between "subsection" and "header"..., like a chain


‚ùì DESCENDANT COMBINATOR 
- will only cause elements that match the last selector to be selected if they also 
have an ancestor that matches the previous selector

In HTML file:

<div class="ancestor"> <!-- A -->
  <div class="contents"> <!-- B -->
    <div class="contents"> <!-- C -->
    </div>
  </div>
</div>

<div class="contents"></div> <!-- D -->

In CSS file:

.ancestor .contents {
  /* some declarations */
}

In this example "contents" class B and C would be selected.


‚úÖ Properties 

Accepts keywords (e.g. "red" or "transparent"), HEX, RGB, and HSL values:
color
background-color

font-family
text-align
font-size
font-weight - boldness of text (accepts keywords or numbers 1 to 1000 with 1000 being the boldest)

Image:
‚ùóÔ∏è TIP: to adjust an image without causing it to lose proportions, use value "auto" for height
and adjust width value

height
weight
